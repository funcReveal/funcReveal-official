/**
 * üöÄ  Auto‚Äëgenerated by generateEffectSources.ts
 * Âà•ÊâãÂãï‰øÆÊîπÔºåÊîπ‰∫Ü‰πüÊúÉÂú®‰∏ãÊ¨°Âü∑Ë°åÊôÇË¢´Ë¶ÜËìãÔºÅ
 */

export interface EffectSource {
  tsxCode: string;
  cssCode: string;
  githubUrl: string;
  TSXName: string;
  CSSName: string;
}

export const effectSources: Record<string, EffectSource> = {
  "animated-border": {
    tsxCode: `import React from 'react';
import styles from './AnimatedBorder.module.css';

/**
 * AnimatedBorder Component
 * ------------------------
 * Renders a circular placeholder with a rotating colorful glow ring behind it.
 * This is commonly used for avatars or badges with visual effects.
 */
const AnimatedBorder = () => {
    return (
        <div className={styles.container}>
            {/* Colorful rotating glow behind the circle */}
            <div className={styles.glow}></div>

            {/* Foreground placeholder (can represent avatar) */}
            <div className={styles.placeholder}></div>
        </div>
    );
};

export default AnimatedBorder;
`,
    cssCode: `/* =====================================
   Container for the Circular Glow Effect
   ===================================== */
.container {
  position: relative;
  width: 160px;
  height: 160px;
  border-radius: 50%; /* Make the shape circular */
  display: flex;
  justify-content: center; /* Horizontally center the child */
  align-items: center; /* Vertically center the child */
}

/* ==========================================
   Rotating Rainbow Glow Effect (Outer Layer)
   ========================================== */
.glow {
  position: absolute;
  top: -12px;
  left: -12px;
  width: calc(100% + 24px); /* Expand beyond the container */
  height: calc(100% + 24px);
  border-radius: 50%; /* Keep it circular */
  background: conic-gradient(
    /* Rainbow gradient effect */ red,
    orange,
    yellow,
    green,
    cyan,
    blue,
    violet,
    red
  );
  filter: blur(12px); /* Soft blur for glow effect */
  animation: spin 4s linear infinite; /* Infinite spinning animation */
  z-index: 1; /* Positioned below the placeholder */
}

/* =====================================
   Placeholder Circle (Simulated Avatar)
   ===================================== */
.placeholder {
  width: 100%;
  height: 100%;
  border-radius: 50%; /* Circular shape */
  background-color: #ef9c9c; /* Default inner fill (can be replaced) */
  position: relative;
  z-index: 2; /* Layered above the glow */
}

/* ======================
   Keyframe: Spin Motion
   ====================== */
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
`,
    githubUrl:
      "https://github.com/funcReveal/effects-gallery/tree/main/static-effects/animated-border",
    TSXName: "AnimatedBorder.tsx",
    CSSName: "AnimatedBorder.module.css",
  },
  "glow-button": {
    tsxCode: `import React from 'react';
import styles from './GlowButton.module.css'; // You can also use styled-components or Emotion

/**
 * GlowButton Component
 * ---------------------
 * A button with a glowing hover effect using CSS animation.
 * Suitable for call-to-action or interactive UI elements.
 */
const GlowButton = () => {
    return (
        <button className={styles.glowButton}>
            Hover Me
        </button>
    );
};

export default GlowButton;
`,
    cssCode: `/* =============================
   Glowing Button with Hover Effect
   ============================= */
.glowButton {
  padding: 1rem 2rem; /* Inner spacing */
  font-size: 1rem; /* Text size */
  border: none; /* Remove default border */
  background: #111; /* Dark background */
  color: white; /* Text color */
  cursor: pointer; /* Show pointer on hover */
  position: relative;
  border-radius: 8px; /* Rounded corners */

  /* Initial glow effect (both outer and inner) */
  box-shadow: 0 0 10px #00f, /* Outer glow */ 0 0 20px #00f inset; /* Inner glow */

  transition: box-shadow 0.3s ease; /* Smooth transition on hover */
}

/* =============================
   Stronger glow on hover
   ============================= */
.glowButton:hover {
  box-shadow: 0 0 20px #0ff, /* Stronger outer glow */ 0 0 30px #0ff inset; /* Stronger inner glow */
}
`,
    githubUrl:
      "https://github.com/funcReveal/effects-gallery/tree/main/js-css-effects/glow-button",
    TSXName: "GlowButton.tsx",
    CSSName: "GlowButton.module.css",
  },
  "breathing-light": {
    tsxCode: `// BreathingLight.tsx
// Simple breathing‚Äëlight component. Customize size, color and duration via props.
import React from 'react';
import styles from './BreathingLight.module.css';

export interface BreathingLightProps {
    /** Diameter in px (default 24) */
    size?: number;
    /** Base glow color (default #00e5ff) */
    color?: string;
    /** Breathing cycle in seconds (default 3) */
    duration?: number;
}

const BreathingLight: React.FC<BreathingLightProps> = ({
    size = 24,
    color = '#00e5ff',
    duration = 3,
}) => {
    // Pass CSS¬†variables to the style prop.
    const style: React.CSSProperties & Record<string, string> = {
        '--size': \`\${size}px\`,
        '--color': color,
        '--duration': \`\${duration}s\`,
    };
    return <span className={styles.breathingLight} style={style} />;
};

export default BreathingLight;`,
    cssCode: `/* BreathingLight.module.css */
/* A circular light that ‚Äúbreathes‚Äù by scaling and changing opacity. */
.breathingLight {
  /* Default CSS¬†variables (override via inline style) */
  --size: 24px; /* Diameter of the circle */
  --color: #00e5ff; /* Base glow color */
  --duration: 3s; /* One breathing cycle */

  width: var(--size);
  height: var(--size);
  background: var(--color);
  border-radius: 50%;
  display: inline-block;
  box-shadow: 0 0 8px currentColor;
  animation: breathing var(--duration) ease-in-out infinite;
}

@keyframes breathing {
  0%,
  100% {
    transform: scale(0.9);
    opacity: 0.6;
    box-shadow: 0 0 6px currentColor, 0 0 12px currentColor;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
    box-shadow: 0 0 12px currentColor, 0 0 24px currentColor;
  }
}
`,
    githubUrl:
      "https://github.com/funcReveal/effects-gallery/tree/main/js-css-effects/breathing-light",
    TSXName: "BreathingLight.tsx",
    CSSName: "BreathingLight.module.css",
  },
};
